import Supplier from '../models/supplier.js';
import createHttpError from 'http-errors';

// üìå –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ (GET)
export async function getAllSuppliers(req, res, next) {
  try {
    const suppliers = await Supplier.find();
    res.status(200).json(suppliers);
  } catch (error) {
    next(createHttpError(500, '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤'));
  }
}

// üìå –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–≥–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ (POST)
export async function createSupplier(req, res, next) {
  try {
    const { name, company, address, phone } = req.body;
    const newSupplier = await Supplier.create({
      name,
      company,
      address,
      phone,
    });
    res.status(201).json(newSupplier);
  } catch (error) {
    next(createHttpError(500, '–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞'));
  }
}

// üìå –û–±–Ω–æ–≤–∏—Ç—å –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ (PUT)
export async function updateSupplier(req, res, next) {
  try {
    const { id } = req.params;
    const updatedSupplier = await Supplier.findByIdAndUpdate(id, req.body, {
      new: true,
    });
    if (!updatedSupplier) throw createHttpError(404, '–ü–æ—Å—Ç–∞–≤—â–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω');
    res.status(200).json(updatedSupplier);
  } catch (error) {
    next(error);
  }
}

// üìå –£–¥–∞–ª–∏—Ç—å –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ (DELETE)
export async function deleteSupplier(req, res, next) {
  try {
    const { id } = req.params;
    const deletedSupplier = await Supplier.findByIdAndDelete(id);
    if (!deletedSupplier) throw createHttpError(404, '–ü–æ—Å—Ç–∞–≤—â–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω');
    res.status(204).send();
  } catch (error) {
    next(error);
  }
}
