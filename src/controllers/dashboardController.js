import Order from '../models/order.js';
import Customer from '../models/customer.js';
import Product from '../models/product.js';

// üìå –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É (–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤, –∫–ª–∏–µ–Ω—Ç–æ–≤, –ø—Ä–æ–¥—É–∫—Ç–æ–≤)
export async function getDashboardStatistics(req, res) {
  try {
    const totalOrders = await Order.countDocuments();
    const totalCustomers = await Customer.countDocuments();
    const totalProducts = await Product.countDocuments();

    res.status(200).json({ totalOrders, totalCustomers, totalProducts });
  } catch (error) {
    res.status(500).json({ message: '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏' });
  }
}

// üìå –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
export async function getRecentCustomers(req, res) {
  try {
    const recentCustomers = await Customer.find()
      .sort({ createdAt: -1 })
      .limit(5);
    res.status(200).json(recentCustomers);
  } catch (error) {
    res.status(500).json({ message: '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤' });
  }
}

// üìå –ü–æ–ª—É—á–∏—Ç—å –¥–æ—Ö–æ–¥—ã –∏ —Ä–∞—Å—Ö–æ–¥—ã –ø–æ –¥–∞—Ç–∞–º
export async function getIncomeExpenses(req, res) {
  try {
    const { startDate, endDate } = req.query;
    const orders = await Order.find({
      createdAt: { $gte: new Date(startDate), $lte: new Date(endDate) },
    });

    const totalIncome = orders.reduce(
      (acc, order) => acc + order.totalPrice,
      0,
    );

    res.status(200).json({ totalIncome });
  } catch (error) {
    res.status(500).json({ message: '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ—Ö–æ–¥–æ–≤/—Ä–∞—Å—Ö–æ–¥–æ–≤' });
  }
}
