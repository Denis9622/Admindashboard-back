import Order from '../models/order.js';
import Customer from '../models/customer.js';
import createHttpError from 'http-errors';


export async function createOrder(req, res) {
  try {
    console.log('–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:', req.body);

    const { customerId, address, products, orderDate, price, status } =
      req.body;

    if (!customerId)
      return res.status(400).json({ message: 'customerId –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω' });

    const customer = await Customer.findById(customerId);
    if (!customer) return res.status(400).json({ message: '–ö–ª–∏–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω' });

    const newOrder = await Order.create({
      customer: customer._id, // ‚úÖ –¢–µ–ø–µ—Ä—å —Å–æ—Ö—Ä–∞–Ω—è–µ–º ObjectId –∫–ª–∏–µ–Ω—Ç–∞
      address,
      products,
      orderDate,
      price,
      status,
    });

    res.status(201).json(newOrder);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞:', error);
    res.status(500).json({ message: '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞' });
  }
}



export async function getAllOrders(req, res) {
  try {
    const orders = await Order.find().populate('customer'); // ‚úÖ –ü–æ–¥—Ç—è–≥–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞
    res.status(200).json(orders);
  } catch (error) {
    res.status(500).json({ message: '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–∫–∞–∑–æ–≤' });
  }
}

// üìå –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ (GET)
export async function getAllCustomers(req, res, next) {
  try {
    const customers = await Customer.find();
    res.status(200).json(customers);
  } catch (error) {
    next(createHttpError(500, '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤'));
  }
}