import express from 'express';
import Order from '../models/order.js';
import Customer from '../models/customer.js';

const router = express.Router();

// üìå GET: –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤ —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏
router.get('/',  async (req, res) => {
  try {
    const orders = await Order.find().populate('customer', 'name email'); // ‚úÖ –ü–æ–¥—Ç—è–≥–∏–≤–∞–µ–º –∏–º—è –∏ email –∫–ª–∏–µ–Ω—Ç–∞
    res.json(orders);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–æ–≤:', error);
    res.status(500).json({ message: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' });
  }
});

// üìå POST: –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑
router.post('/',  async (req, res) => {
  try {
    const { customerId, address, products, orderDate, price, status } =
      req.body;

    if (!customerId)
      return res.status(400).json({ message: 'customerId –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω' });

    const customer = await Customer.findById(customerId);
    if (!customer) return res.status(400).json({ message: '–ö–ª–∏–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω' });

    const newOrder = new Order({
      customer: customer._id, // ‚úÖ –°–≤—è–∑—å —Å –∫–ª–∏–µ–Ω—Ç–æ–º
      address,
      products,
      orderDate,
      price,
      status,
    });
    await newOrder.save();

    res.status(201).json(newOrder);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞:', error);
    res.status(500).json({ message: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' });
  }
});

// üìå PUT: –û–±–Ω–æ–≤–∏—Ç—å –∑–∞–∫–∞–∑
router.put('/:id',  async (req, res) => {
  try {
    const updatedOrder = await Order.findByIdAndUpdate(
      req.params.id,
      req.body,
      { new: true },
    );
    res.json(updatedOrder);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞:', error);
    res.status(500).json({ message: '–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è' });
  }
});

// üìå DELETE: –£–¥–∞–ª–∏—Ç—å –∑–∞–∫–∞–∑
router.delete('/:id',  async (req, res) => {
  try {
    await Order.findByIdAndDelete(req.params.id);
    res.json({ message: '–ó–∞–∫–∞–∑ —É–¥–∞–ª–µ–Ω' });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞:', error);
    res.status(500).json({ message: '–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è' });
  }
});

export default router;
