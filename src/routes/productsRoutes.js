import express from 'express';
import Product from '../models/product.js';

const router = express.Router();

// üìå GET: –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤
router.get('/', async (req, res) => {
  try {
    const products = await Product.find();
    res.json(products);
  } catch (error) {
    res.status(500).json({ message: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' });
  }
});

// üìå POST: –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä
router.post('/',  async (req, res) => {
  try {
    const { name, category, stock, suppliers, price } = req.body;
    const newProduct = new Product({ name, category, stock, suppliers, price });
    await newProduct.save();
    res.status(201).json(newProduct);
  } catch (error) {
    res.status(500).json({ message: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' });
  }
});

// üìå PUT: –û–±–Ω–æ–≤–∏—Ç—å —Ç–æ–≤–∞—Ä
router.put('/:id',  async (req, res) => {
  try {
    const updatedProduct = await Product.findByIdAndUpdate(
      req.params.id,
      req.body,
      { new: true },
    );
    res.json(updatedProduct);
  } catch (error) {
    res.status(500).json({ message: '–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è' });
  }
});

// üìå DELETE: –£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä
router.delete('/:id', async (req, res) => {
  try {
    await Product.findByIdAndDelete(req.params.id);
    res.json({ message: '–¢–æ–≤–∞—Ä —É–¥–∞–ª–µ–Ω' });
  } catch (error) {
    res.status(500).json({ message: '–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è' });
  }
});

export default router;
